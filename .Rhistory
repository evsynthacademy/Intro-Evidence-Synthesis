swirl()
library(swirl)
swirl()
swirl()
library(dplyr)
library(ggplot2)
library(nycflights13)
data = flights %>% sample_frac(.01)
ggplot(data, aes(x=distance, y= dep_delay)) +
geom_point()
data(nycflights13)
install.packages("DSR")
install.packages("DSR")
library(devtools)
devtools::install_github("garrettgman/DSR")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/population.rdata")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/table1.rdata")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/table2.rdata")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/table3.rdata")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/table4.rdata")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/table5.rdata")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/table6.rdata")
load("C:/Users/adam_/Downloads/DSR-master/DSR-master/data/who.rdata")
as.tibble(table1)
library(tidyverse)
as.tibble(table1)
library(tibble)
as.tibble(table1)
as.data.frame(table1)
as.data_frame(table1)
as_data_frame(table1)
for (i in 1:6){
as_data_frame(paste0("table",i))
}
as_data_frame(table2)
as_data_frame(table3)
string= "C:\Users\adam_\Dropbox\Brown\course-in-a-box\img"
data(tidyr)
data("tidyr")
?data
data(package=tidyr)
data(package="tidyr")
smiths
who
population
population %>% spread(year, population)
gather(table4, "year", "cases")
gather(table4, "year", "cases", 2:3)
?separate
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
library(gridExtra)
p1 = ggplot(data, aes(dep_delay, arr_delay, colour = carrier)) +
geom_point()
p2 = ggplot(data, aes(dep_delay, arr_delay)) +
geom_point(aes(colour = carrier))
p3 =  ggplot(data, aes(dep_delay)) +
geom_point(aes(y = arr_delay, colour = carrier))
p4 = ggplot(data) +
geom_point(aes(dep_delay, arr_delay, colour = carrier))
grid.arrange(p1,p2,p3,p4,ncol=2)
1247/12
388+97+135
library("rvest")
url <- "http://tennislink.usta.com/Tournaments/TournamentHome/Tournament.aspx?T=178564#&&s=8Results0"
tennis <- url %>%
html()
library("rvest")
url <- "http://tennislink.usta.com/Tournaments/TournamentHome/Tournament.aspx?T=178564#&&s=8Results0"
tennis <- url %>%
read_html()
tennis
tennis <- url %>%
read_html() %>%
html_table()
tennis
library("rvest")
url <- "http://tennislink.usta.com/Tournaments/TournamentHome/Tournament.aspx?T=178564#&&s=8Results0"
tennis <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="ctl00_mainContent_ControlTabs2_panHTML"]/table[1]') %>%
html_table()
tennis
tennis[[1]]
tennis <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="ctl00_mainContent_ControlTabs2_panHTML"]/table[1]')
tennis
library("rvest")
url <- "http://tennislink.usta.com/Tournaments/TournamentHome/Tournament.aspx?T=178564#&&s=8Results0"
tennis <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="ctl00_mainContent_ControlTabs2_panHTML"]/table[1]') %>%
html_table()
tennis <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="ctl00_mainContent_ControlTabs2_panHTML"]') %>%
html_table()
tennis <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="ctl00_mainContent_ControlTabs2_panHTML"]')
tennis <- url %>%
read_html()
class(tennis)
tennis$node
tennis$doc
names(tennis)
str(tennis)
tennis %>% html_te
tennis %>% html_text()
library(XML)
tennis.table = readHTMLTable(url, header=T, which=1,stringsAsFactors=F)
tennis.table
tennis.table = readHTMLTable(url, header=T, which=2,stringsAsFactors=F)
tennis.table
tennis.table = readHTMLTable(url, header=T, which=3,stringsAsFactors=F)
tennis.table
tennis.table = readHTMLTable(url, header=T, which=4,stringsAsFactors=F)
tennis.table
tennis.table = readHTMLTable(url, header=T, which=6,stringsAsFactors=F)
tennis.table
tennis.table = readHTMLTable(url, header=T, which=7,stringsAsFactors=F)
tennis.table
tennis.table = readHTMLTable(url, header=T, which=8,stringsAsFactors=F)
tennis.table = readHTMLTable(url, header=T, which=5,stringsAsFactors=F)
tennis.table
tennis.table = readHTMLTable(url, header=T, which=6,stringsAsFactors=F)
tennis.table
require(httr)
require(XML)
basePage <- "http://tennislink.usta.com/Tournaments/TournamentHome/"
h <- handle(basePage)
res <- GET(handle = h, path = "Tournament.aspx?T=178564#&&s=8Results0")
resXML <- htmlParse(content(res, as = "text"))
resXML
resTable <- getNodeSet(resXML, '//*[@id="ctl00_mainContent_ControlTabs2_panHTML')
url<-'http://tennislink.usta.com/Tournaments/TournamentHome/Tournament.aspx?T=178564#&&s=8Results0'
flightdata<-GET(url)
output<- content(flightdata, as="text") %>% fromJSON(flatten=FALSE)
library(httr)
library(jsonlite)
url<-'http://tennislink.usta.com/Tournaments/TournamentHome/Tournament.aspx?T=178564#&&s=8Results0'
flightdata<-GET(url)
output<- content(flightdata, as="text") %>% fromJSON(flatten=FALSE)
output<- content(flightdata, as="text")
output
url<-'http://www.phl.org/_layouts/15/Fuseideas.PHL.SharePoint/FlightTracker.ashx?dir=D'
flightdata<-GET(url)
output<- content(flightdata, as="text")
url<-'http://tennislink.usta.com/Tournaments/TournamentHome/Tournament.aspx'
flightdata<-GET(url)
output<- content(flightdata, as="text") %>% fromJSON(flatten=FALSE)
output<- content(flightdata, as="text")
output
url <- "http://usta.demdex.net/event?d_nsid=0&d_ld=_ts%3D1495493809866&d_rtbd=json&d_jsonv=1&d_dst=1&d_cb=demdexRequestCallback_0_1495493809866&c_pageName=tlink%3Atourn%3Asearch%20results%3Atournament%20home%20page&c_channel=tlink&c_prop1=tlink%3Atourn&c_eVar1=tlink%3Atourn&c_prop2=tlink%3Atourn%3Asearch%20results&c_eVar2=tlink%3Atourn%3Asearch%20results&c_prop3=tlink%3Atourn%3Asearch%20results&c_eVar3=tlink%3Atourn%3Asearch%20results&c_prop6=tournament%20home%20page&c_eVar6=tournament%20home%20page&c_prop8=tennislink.usta.com&c_eVar8=tennislink.usta.com&c_prop14=not%20logged%20in&c_eVar14=not%20logged%20in&c_prop16=D%3DpageName&c_eVar16=D%3DpageName&c_eVar17=tlink&c_prop43=Public&c_eVar43=Public&c_prop58=any&c_eVar58=any&c_hier1=tlink%3Atourn%3Asearch%20results"
data <- GET(url)
data
d=GET(url)
stopifnot(d$status_code == 200)
dir.create("json/", showWarnings = FALSE)
file = paste0("json/",zip,".json")
write(content(d, as="text"), file=file)
1100/230
library(rentrez)
search_year <- function(year, term){
query <- paste(term, "AND (", year, "[PDAT])")
entrez_search(db="pubmed", term=query, retmax=0)$count
}
year <- 1940:2017
papers <- sapply(year, search_year, term="((((pain management[MeSH Terms]) OR analgesia[MeSH Terms]) AND neonate[MeSH Terms]) NOT labor) NOT cesarean ", USE.NAMES=FALSE)
library(ggplot2)
df <- data.frame(cbind(year,papers))
ggplot(df) + ggtitle("Research Studies of Newborn Babies and Pain") + geom_bar(aes(year,papers), stat = "identity",
position="dodge", color="dodgerblue", fill="lightblue") + theme_minimal() +
scale_x_discrete(breaks = seq(1939, 2017,5),
limits=seq(1935,2021), name="Publication Year") + scale_y_discrete(breaks = seq(0, 100,10),
limits=seq(0, 80), name="Count") +  theme(axis.text.x = element_text(angle = 70, hjust = 1)) +
annotate("text", x = 1965, y = 20, label = "Anand & Hickey (1987)", size=4) + annotate("segment",
x = 1975, xend = 1987, y = 20, yend = 4, colour = "dodgerblue3") +
theme(plot.title = element_text(hjust = 0.5, margin=margin(b=20)),  panel.grid.major = element_line(color = "gray90",
size = 0.5), panel.grid.major.x = element_blank())
search_year <- function(year, term){
query <- paste(term, "AND (", year, "[PDAT])")
entrez_search(db="pubmed", term=query, retmax=0)$count
}
year <- 1940:2017
papers <- sapply(year, search_year, term="((((pain management[MeSH Terms]) OR analgesia[MeSH Terms]) AND neonate[MeSH Terms]) NOT labor) NOT cesarean ", USE.NAMES=FALSE)
library(ggplot2)
df <- data.frame(cbind(year,papers))
ggplot(df) + ggtitle("Publications of Neonate Pain Literature") + geom_bar(aes(year,papers), stat = "identity", position="dodge", color="dodgerblue", fill="lightblue") + theme_minimal() +   scale_x_discrete(breaks = seq(1939, 2017,5),
limits=seq(1935,2021), name="Publication Year") + scale_y_discrete(breaks = seq(0, 100,10),
limits=seq(0, 80), name="") +  theme(axis.text.x = element_text(angle = 70, hjust = 1)) + annotate("text", x = 1965, y = 20, label = "Anand & Hickey (1987)", size=4) + annotate("segment", x = 1975, xend = 1987, y = 20, yend = 4,
colour = "dodgerblue3") + theme(plot.title = element_text(hjust = 0.5, margin=margin(b=20)),  panel.grid.major = element_line(color = "gray90", size = 0.5),
panel.grid.major.x = element_blank())
library(rentrez)
search_year <- function(year, term){
query <- paste(term, "AND (", year, "[PDAT])")
entrez_search(db="pubmed", term=query, retmax=0)$count
}
year <- 1940:2017
papers <- sapply(year, search_year, term="((((pain management[MeSH Terms]) OR analgesia[MeSH Terms]) AND neonate[MeSH Terms]) NOT labor) NOT cesarean ", USE.NAMES=FALSE)
library(ggplot2)
df <- data.frame(cbind(year,papers))
ggplot(df) + ggtitle("Research Studies of Newborn Babies and Pain") + geom_bar(aes(year,papers), stat = "identity",
position="dodge", color="dodgerblue", fill="lightblue") + theme_minimal() +
scale_x_discrete(breaks = seq(1939, 2017,5),
limits=seq(1935,2021), name="Publication Year") + scale_y_discrete(breaks = seq(0, 100,10),
limits=seq(0, 80), name="Count") +  theme(axis.text.x = element_text(angle = 70, hjust = 1)) +
annotate("text", x = 1965, y = 20, label = "Anand & Hickey (1987)", size=4) + annotate("segment",
x = 1975, xend = 1987, y = 20, yend = 4, colour = "dodgerblue3") +
theme(plot.title = element_text(hjust = 0.5, margin=margin(b=20)),  panel.grid.major = element_line(color = "gray90",
ggplot(df) + ggtitle("Research Studies of Newborn Babies and Pain") + geom_bar(aes(year,papers), stat = "identity",
position="dodge", color="dodgerblue", fill="lightblue") + theme_minimal() +
scale_x_discrete(breaks = seq(1939, 2017,5),
limits=seq(1935,2021), name="Publication Year") + scale_y_discrete(breaks = seq(0, 100,10),
limits=seq(0, 80), name="Count") +  theme(axis.text.x = element_text(angle = 70, hjust = 1)) +
annotate("text", x = 1965, y = 20, label = "Anand & Hickey (1987)", size=4) + annotate("segment",
x = 1975, xend = 1987, y = 20, yend = 4, colour = "dodgerblue3") +
theme(plot.title = element_text(hjust = 0.5, margin=margin(b=20)),  panel.grid.major = element_line(color = "gray90",
size = 0.5), panel.grid.major.x = element_blank())
)))
ggplot(df) + ggtitle("Research Studies of Newborn Babies and Pain") + geom_bar(aes(year,papers), stat = "identity",
position="dodge", color="dodgerblue", fill="lightblue") + theme_minimal() +
scale_x_discrete(breaks = seq(1939, 2017,5),
limits=seq(1935,2021), name="Publication Year") + scale_y_discrete(breaks = seq(0, 100,10),
limits=seq(0, 80), name="Count") +  theme(axis.text.x = element_text(angle = 70, hjust = 1)) +
annotate("text", x = 1965, y = 20, label = "Anand & Hickey (1987)", size=4) + annotate("segment",
x = 1975, xend = 1987, y = 20, yend = 4, colour = "dodgerblue3") +
theme(plot.title = element_text(hjust = 0.5, margin=margin(b=20)),  panel.grid.major = element_line(color = "gray90",
size = 0.5), panel.grid.major.x = element_blank())
